name: Pack & Auto Release Stock Monitor

on:
  push:
    paths:
      - 'stock_monitor/**'
      - 'requirements.txt'
      - '.github/workflows/pack-release.yml'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Verify required files exist
      run: |
        echo "Checking required files:"
        Get-ChildItem stock_monitor/resources/
        echo "Icon file exists:"
        Test-Path stock_monitor/resources/icon.ico
        echo "Stock data file exists:"
        Test-Path stock_monitor/resources/stock_basic.json

    - name: Find easyquotation stock_codes.conf
      id: find_eq
      run: |
        python -c "import easyquotation, os; print(os.path.dirname(easyquotation.__file__))" > eq_path.txt
        $EQPATH = Get-Content eq_path.txt | Select-Object -First 1
        echo "EQPATH=$EQPATH" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Build with PyInstaller
      run: |
        pyinstaller -y -w -i stock_monitor/resources/icon.ico -n stock_monitor stock_monitor/main.py `
          --add-data "$env:EQPATH\stock_codes.conf;easyquotation" `
          --add-data "stock_monitor/resources/stock_basic.json;stock_monitor/resources" `
          --add-data "stock_monitor/resources/icon.ico;stock_monitor/resources" `
          --hidden-import=pypinyin `
          --hidden-import=pypinyin.style

    - name: List dist directory
      run: |
        ls dist

    - name: Zip artifact (entire stock_monitor folder)
      run: |
        powershell Compress-Archive -Path dist/stock_monitor/* -DestinationPath stock_monitor.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: stock-monitor
        path: stock_monitor.zip

    - name: Write version extract script
      shell: bash
      run: |
        echo "import re" > get_version.py
        echo "s=open('stock_monitor/main.py',encoding='utf-8').read()" >> get_version.py
        echo "m=re.search(r\"APP_VERSION\\s*=\\s*['\\\"](v[\\d\\.]+)['\\\"]\", s)" >> get_version.py
        echo "print(f'version={m.group(1)}' if m else 'version=unknown')" >> get_version.py

    - name: Get version from main.py
      id: get_version
      shell: bash
      run: |
        version=$(python get_version.py)
        echo "version=${version#version=}" >> $GITHUB_OUTPUT

    - name: Extract changelog from CHANGELOG.md
      id: extract_changelog
      run: |
        # Extract the latest changelog entry using PowerShell
        $content = Get-Content -Path CHANGELOG.md -Raw
        # Match the first version entry (most recent)
        $pattern = "(## v\d+\.\d+\.\d+.*?)(?=## v\d+\.\d+\.\d+|\Z)"
        $match = [regex]::Match($content, $pattern, [System.Text.RegularExpressions.RegexOptions]::Singleline)
        if ($match.Success) {
            $changelog = $match.Groups[1].Value.Trim()
            # Remove trailing dashes if present
            $changelog = $changelog -replace '-{3,}\s*$', ''
            $changelog = $changelog.Trim()
        } else {
            $changelog = "暂无更新日志"
        }
        # Debug output to verify extracted content
        echo "Extracted Changelog:"
        echo $changelog
        echo "changelog=$changelog" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: stock_monitor.zip
        tag_name: stock_monitor_${{ steps.get_version.outputs.version }}
        name: stock_monitor_${{ steps.get_version.outputs.version }}
        body: |
          🤖 stock_monitor_${{ steps.get_version.outputs.version }} 发布说明

          > **本软件完全由AI自动开发，开发者零基础，所有功能均由AI智能生成。**

          ${{ steps.extract_changelog.outputs.changelog }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}