name: Pack & Auto Release Stock Monitor

on:
  push:
    paths:
      - 'main.py'
      - 'requirements.txt'
      - 'stock_basic.json'
      - 'theme_config.json'
      - 'icon.ico'
      - 'icon.png'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller pywin32 easyquotation

    - name: Find easyquotation stock_codes.conf
      id: find_eq
      run: |
        python -c "import easyquotation, os; print(os.path.dirname(easyquotation.__file__))" > eq_path.txt
        $EQPATH = Get-Content eq_path.txt | Select-Object -First 1
        echo "EQPATH=$EQPATH" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Build with PyInstaller
      run: |
        pyinstaller -y -w -i icon.ico -n stock_monitor main.py `
          --add-data "$env:EQPATH\stock_codes.conf;easyquotation" `
          --add-data "stock_basic.json;." `
          --add-data "theme_config.json;." `
          --add-data "icon.png;." `
          --add-data "icon.ico;."

    - name: List dist directory
      run: |
        ls dist

    - name: Zip artifact (entire stock_monitor folder)
      run: |
        powershell Compress-Archive -Path dist/stock_monitor/* -DestinationPath stock_monitor.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: stock-monitor
        path: stock_monitor.zip

    - name: Write version extract script
      shell: bash
      run: |
        echo "import re" > get_version.py
        echo "s=open('main.py',encoding='utf-8').read()" >> get_version.py
        echo "m=re.search(r\"APP_VERSION\\s*=\\s*['\\\"](v[\\d\\.]+)['\\\"]\", s)" >> get_version.py
        echo "print(f'version={m.group(1)}' if m else 'version=unknown')" >> get_version.py

    - name: Get version from main.py
      id: get_version
      shell: bash
      run: |
        version=$(python get_version.py)
        echo "version=${version#version=}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: stock_monitor.zip
        tag_name: stock_monitor_${{ steps.get_version.outputs.version }}
        name: stock_monitor_${{ steps.get_version.outputs.version }}
        body: |
          # 🤖 stock_monitor_${{ steps.get_version.outputs.version }} 发布说明

          > **本软件完全由AI自动开发，开发者零基础，所有功能均由AI智能生成。**

          ## 📝 更新内容
          - 修复主窗口高度自适应逻辑，股票数量再多都能完整显示，不会被裁剪。
          - 采用真实行高动态调整，最小显示3行，边界精简。
          - 体验更流畅，界面更美观。

          ## 🚀 软件简介
          - 由AI驱动开发，零基础也能拥有专业级A股行情监控工具。
          - 极简风格，界面清爽，支持自选股、实时刷新、系统托盘、开机自启等。

          ## 📥 使用方法
          1. 下载下方 `stock_monitor.zip` 文件
          2. 解压到任意目录
          3. 双击 `stock_monitor.exe` 运行
          4. 如遇防火墙提示请选择“允许”

          ## ⚠️ 注意事项
          - 仅支持 Windows 10/11
          - 需联网获取实时行情
          - 若杀毒软件误报，请添加信任
          - 数据来源：新浪财经

          ## 💡 常见问题
          - **Q: 这是人写的吗？**
            - A: 不是！本软件完全由AI自动生成，开发者零基础。
          - **Q: 杀毒报毒怎么办？**
            - A: 纯净Python打包，若误报请添加信任或白名单。
          - **Q: 如何反馈bug或建议？**
            - A: 请在 [GitHub Issues](https://github.com/leo8912/stock_monitor/issues) 提交。

          ## 📧 联系方式
          - [GitHub主页](https://github.com/leo8912/stock_monitor)

          ## 🛡️ 免责声明
          本软件完全由AI编写，仅供学习交流使用，不构成投资建议。股市有风险，投资需谨慎。
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 